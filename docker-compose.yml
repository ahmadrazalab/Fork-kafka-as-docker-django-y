version: '3.9'

services:
  db:
    image: mysql:8
    environment:
      MYSQL_DATABASE: yourdbname
      MYSQL_USER: yourdbuser
      MYSQL_PASSWORD: yourdbpassword
      MYSQL_ROOT_PASSWORD: yourdbpassword
    volumes:
      - mysql_data:/var/lib/mysql/

  redis:
    image: redis:6
    volumes:
      - redis_data:/data

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_MY_ID=1
    volumes:
      - zookeeper_data:/bitnami/zookeeper/data
      - zookeeper_logs:/bitnami/zookeeper/logs

  kafka:
    build:
      context: .
      dockerfile: Dockerfile.kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_NAME_PREFIXES: INSIDE,OUTSIDE
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: ["/usr/bin/create_kafka_topic.sh"]
    depends_on:
      - zookeeper

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - zookeeper
      - kafka
    environment:
      - DATABASE_URL=mysql://yourdbuser:yourdbpassword@db/yourdbname
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_URL=kafka:9092  
      - KAFKA_TOPIC=django_logs

volumes:
  mysql_data:
  redis_data:
  zookeeper_data:
  zookeeper_logs:
